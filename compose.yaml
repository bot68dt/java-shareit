services:
  gateway:
    build: gateway
    image: shareit-gateway
    container_name: shareit-gateway
    ports:
      - "8080:8080"
    depends_on:
      - server
    environment:
      - SHAREIT_SERVER_URL=http://server:9090

  server:
    build: server
    image: shareit-server
    container_name: shareit-server
    ports:
      - "9090:9090"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/shareit
      - SPRING_DATASOURCE_USERNAME=bot68dt
      - SPRING_DATASOURCE_PASSWORD=12345

  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "6541:5432"
    environment:
      - POSTGRES_PASSWORD=bot68dt
      - POSTGRES_USER=12345
      - POSTGRES_DB=shareit
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  db-init:
        image: postgres:16.1
        container_name: db-init
        depends_on:
          db:
            condition: service_healthy
        entrypoint:
          - bash
          - -c
          - |
            set -e
            psql postgresql://dbuser:bot68dt@db:5432/shareit -v ON_ERROR_STOP=1 <<-EOSQL
            CREATE TABLE IF NOT EXISTS users (
              id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
              email VARCHAR(255) NOT NULL UNIQUE,
              fullname VARCHAR(255) NOT NULL
            );

            CREATE TABLE IF NOT EXISTS requests (
              id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
              description VARCHAR(255) NOT NULL,
              created_date timestamp NOT NULL,
              user_id BIGINT NOT NULL,
              FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
            );

            CREATE TABLE IF NOT EXISTS items (
              id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
              name VARCHAR(255) NOT NULL,
              description VARCHAR(255) NOT NULL,
              available BOOLEAN NOT NULL,
              user_id BIGINT NOT NULL,
              request_id BIGINT,
              FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
              FOREIGN KEY (request_id) REFERENCES requests(id) ON DELETE CASCADE
            );

            CREATE TABLE IF NOT EXISTS bookings (
              id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
              start_date timestamp NOT NULL,
              end_date timestamp NOT NULL,
              item_id BIGINT NOT NULL,
              user_id BIGINT NOT NULL,
              status VARCHAR(50) NOT NULL,
              FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE,
              FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
            );

            CREATE TABLE IF NOT EXISTS comments (
              id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
              text VARCHAR(255) NOT NULL,
              item_id BIGINT NOT NULL,
              user_id BIGINT NOT NULL,
              created timestamp NOT NULL,
              FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE,
              FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
            );
            EOSQL